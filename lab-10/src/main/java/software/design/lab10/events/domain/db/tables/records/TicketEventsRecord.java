/*
 * This file is generated by jOOQ.
 */
package software.design.lab10.events.domain.db.tables.records;


import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record3;
import org.jooq.Row3;
import org.jooq.impl.UpdatableRecordImpl;

import software.design.lab10.events.domain.db.tables.TicketEvents;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class TicketEventsRecord extends UpdatableRecordImpl<TicketEventsRecord> implements Record3<Long, Long, String> {

    private static final long serialVersionUID = 1L;

    /**
     * Setter for <code>public.ticket_events.event_id</code>.
     */
    public void setEventId(Long value) {
        set(0, value);
    }

    /**
     * Getter for <code>public.ticket_events.event_id</code>.
     */
    public Long getEventId() {
        return (Long) get(0);
    }

    /**
     * Setter for <code>public.ticket_events.ticket_id</code>.
     */
    public void setTicketId(Long value) {
        set(1, value);
    }

    /**
     * Getter for <code>public.ticket_events.ticket_id</code>.
     */
    public Long getTicketId() {
        return (Long) get(1);
    }

    /**
     * Setter for <code>public.ticket_events.event_data</code>.
     */
    public void setEventData(String value) {
        set(2, value);
    }

    /**
     * Getter for <code>public.ticket_events.event_data</code>.
     */
    public String getEventData() {
        return (String) get(2);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    public Record1<Long> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record3 type implementation
    // -------------------------------------------------------------------------

    @Override
    public Row3<Long, Long, String> fieldsRow() {
        return (Row3) super.fieldsRow();
    }

    @Override
    public Row3<Long, Long, String> valuesRow() {
        return (Row3) super.valuesRow();
    }

    @Override
    public Field<Long> field1() {
        return TicketEvents.TICKET_EVENTS.EVENT_ID;
    }

    @Override
    public Field<Long> field2() {
        return TicketEvents.TICKET_EVENTS.TICKET_ID;
    }

    @Override
    public Field<String> field3() {
        return TicketEvents.TICKET_EVENTS.EVENT_DATA;
    }

    @Override
    public Long component1() {
        return getEventId();
    }

    @Override
    public Long component2() {
        return getTicketId();
    }

    @Override
    public String component3() {
        return getEventData();
    }

    @Override
    public Long value1() {
        return getEventId();
    }

    @Override
    public Long value2() {
        return getTicketId();
    }

    @Override
    public String value3() {
        return getEventData();
    }

    @Override
    public TicketEventsRecord value1(Long value) {
        setEventId(value);
        return this;
    }

    @Override
    public TicketEventsRecord value2(Long value) {
        setTicketId(value);
        return this;
    }

    @Override
    public TicketEventsRecord value3(String value) {
        setEventData(value);
        return this;
    }

    @Override
    public TicketEventsRecord values(Long value1, Long value2, String value3) {
        value1(value1);
        value2(value2);
        value3(value3);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached TicketEventsRecord
     */
    public TicketEventsRecord() {
        super(TicketEvents.TICKET_EVENTS);
    }

    /**
     * Create a detached, initialised TicketEventsRecord
     */
    public TicketEventsRecord(Long eventId, Long ticketId, String eventData) {
        super(TicketEvents.TICKET_EVENTS);

        setEventId(eventId);
        setTicketId(ticketId);
        setEventData(eventData);
    }
}
