/*
 * This file is generated by jOOQ.
 */
package software.design.lab4.todo.list.domain.db.tables.records;


import java.time.LocalDateTime;

import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record4;
import org.jooq.Row4;
import org.jooq.impl.UpdatableRecordImpl;

import software.design.lab4.todo.list.domain.db.tables.Lists;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class ListsRecord extends UpdatableRecordImpl<ListsRecord> implements Record4<Long, Long, String, LocalDateTime> {

    private static final long serialVersionUID = 1L;

    /**
     * Setter for <code>public.lists.id</code>.
     */
    public void setId(Long value) {
        set(0, value);
    }

    /**
     * Getter for <code>public.lists.id</code>.
     */
    public Long getId() {
        return (Long) get(0);
    }

    /**
     * Setter for <code>public.lists.user_id</code>.
     */
    public void setUserId(Long value) {
        set(1, value);
    }

    /**
     * Getter for <code>public.lists.user_id</code>.
     */
    public Long getUserId() {
        return (Long) get(1);
    }

    /**
     * Setter for <code>public.lists.title</code>.
     */
    public void setTitle(String value) {
        set(2, value);
    }

    /**
     * Getter for <code>public.lists.title</code>.
     */
    public String getTitle() {
        return (String) get(2);
    }

    /**
     * Setter for <code>public.lists.created_ts</code>.
     */
    public void setCreatedTs(LocalDateTime value) {
        set(3, value);
    }

    /**
     * Getter for <code>public.lists.created_ts</code>.
     */
    public LocalDateTime getCreatedTs() {
        return (LocalDateTime) get(3);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    public Record1<Long> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record4 type implementation
    // -------------------------------------------------------------------------

    @Override
    public Row4<Long, Long, String, LocalDateTime> fieldsRow() {
        return (Row4) super.fieldsRow();
    }

    @Override
    public Row4<Long, Long, String, LocalDateTime> valuesRow() {
        return (Row4) super.valuesRow();
    }

    @Override
    public Field<Long> field1() {
        return Lists.LISTS.ID;
    }

    @Override
    public Field<Long> field2() {
        return Lists.LISTS.USER_ID;
    }

    @Override
    public Field<String> field3() {
        return Lists.LISTS.TITLE;
    }

    @Override
    public Field<LocalDateTime> field4() {
        return Lists.LISTS.CREATED_TS;
    }

    @Override
    public Long component1() {
        return getId();
    }

    @Override
    public Long component2() {
        return getUserId();
    }

    @Override
    public String component3() {
        return getTitle();
    }

    @Override
    public LocalDateTime component4() {
        return getCreatedTs();
    }

    @Override
    public Long value1() {
        return getId();
    }

    @Override
    public Long value2() {
        return getUserId();
    }

    @Override
    public String value3() {
        return getTitle();
    }

    @Override
    public LocalDateTime value4() {
        return getCreatedTs();
    }

    @Override
    public ListsRecord value1(Long value) {
        setId(value);
        return this;
    }

    @Override
    public ListsRecord value2(Long value) {
        setUserId(value);
        return this;
    }

    @Override
    public ListsRecord value3(String value) {
        setTitle(value);
        return this;
    }

    @Override
    public ListsRecord value4(LocalDateTime value) {
        setCreatedTs(value);
        return this;
    }

    @Override
    public ListsRecord values(Long value1, Long value2, String value3, LocalDateTime value4) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached ListsRecord
     */
    public ListsRecord() {
        super(Lists.LISTS);
    }

    /**
     * Create a detached, initialised ListsRecord
     */
    public ListsRecord(Long id, Long userId, String title, LocalDateTime createdTs) {
        super(Lists.LISTS);

        setId(id);
        setUserId(userId);
        setTitle(title);
        setCreatedTs(createdTs);
    }
}
